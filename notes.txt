ROUTE - http://localhost:5050/api/prompt
METHOD - POST 
BODY - {
    "role" : "assistant",
    "prompt" : "What is the population of India"
}
REPONSE - {
    "prompt": {
        "content": "What is the population of India",
        "role": "assistant"
    },
    "response": {
        "role": "assistant",
        "content": "As of July 2021, the population of India is estimated to be around 1.366 billion people."
    }
}

ROLES - assistant,user,system,function
ECNODING TO BASE64 NECESSARY DURING JIRA API CALL

----
IMPROVE MODEL ACCURACY
IMPROVE PROMPTS USING PROMPT ENGINEERING
FORMAT RESPONSE DATA

Hi Prathmesh, good morning.
I was working on the gen-AI use case that we discussed last friday and as a
part of that I have been developing a node.js application integrated with openAI to
come up with UAT test cases.
I would love to share a sample response that the app has generated, if you would like to take a
look at that.